name: Build and Sign Windows Python Interpreter

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  actions: read

env:
  AZURE_KEYVAULT_URL: https://rinktvault.vault.azure.net/
  AZURE_KEYVAULT_CERTIFICATE: Rinkt

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    environment:
      name: runner
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas pyinstaller

      - name: Extract Tag Name (Windows)
        shell: powershell
        run: |
            $TAG_NAME = "${{ github.ref }}"
            $TAG_NAME = $TAG_NAME -replace 'refs/tags/', ''
            echo "TAG_NAME=$TAG_NAME" >> $env:GITHUB_ENV

      - name: Set binary name variable
        shell: powershell
        run: |
            $BINARY_NAME = "python_data_processor_$env:TAG_NAME.exe"
            echo "BINARY_NAME=$BINARY_NAME" >> $env:GITHUB_ENV

      - name: Print Binary name
        run: echo "Binary name is $env:BINARY_NAME"

      - name: Build Python Interpreter with PyInstaller
        run: |
          pyinstaller --name=$env:BINARY_NAME --hidden-import=numpy --hidden-import=pandas --onefile python_interpreter.py

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Install AzureSignTool
        run: dotnet tool install --global AzureSignTool --version 4.0.1

      - name: Sign Binary
        env:
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        run: |
          azuresigntool sign -kvu ${{ env.AZURE_KEYVAULT_URL}} -kvc ${{ env.AZURE_KEYVAULT_CERTIFICATE }} -kvi ${{ env.AZURE_CLIENT_ID }} -kvs ${{ env.AZURE_CLIENT_SECRET }} -kvt ${{ env.AZURE_TENANT_ID }} -tr http://timestamp.digicert.com -td sha256 "dist\$env:BINARY_NAME"

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-binary
          path: dist/${{ env.BINARY_NAME }}

  create-release-windows:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Print Tag Name
        run: echo "Tag name is $TAG_NAME"

      - name: Set binary name variable
        run: echo "BINARY_NAME=python_data_processor_$TAG_NAME.exe" >> $GITHUB_ENV

      - name: Download Windows binary artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-binary
          path: dist

      - name: List downloaded files for debugging
        run: ls -al dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "Release ${{ env.BINARY_NAME }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ env.BINARY_NAME }}
          asset_name: ${{ env.BINARY_NAME }}
          asset_content_type: application/octet-stream